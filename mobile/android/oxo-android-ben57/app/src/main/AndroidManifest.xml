<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- This permission is required to allow the app to make network requests. -->
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.SecureVaultIPDisclosure"
        android:usesCleartextTraffic="true"> <!-- Added this line to allow HTTP traffic -->
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:theme="@style/Theme.SecureVaultIPDisclosure">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- This is the vulnerable activity.
             The "exported" attribute set to true allows it to be launched by other apps.
             The intent-filter makes it accessible via a custom implicit intent. -->
        <activity
            android:name=".IPLeakActivity"
            android:exported="true" >
            <intent-filter>
                <!-- This is the custom action that another app will use to trigger the vulnerability. -->
                <action android:name="com.example.securevaultipdisclosure.action.LEAK_IP" />

                <!-- The DEFAULT category allows the activity to be targeted by implicit intents. -->
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
    </application>
</manifest>
